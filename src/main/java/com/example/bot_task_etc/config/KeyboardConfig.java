package com.example.bot_task_etc.config;

import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardButton;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardRow;

import java.util.ArrayList;
import java.util.List;

@Component
public class KeyboardConfig {
    public ReplyKeyboardMarkup getMainMenuKeyboard() {
        KeyboardRow row = new KeyboardRow();
        row.add(new KeyboardButton("üìù –ó–∞–º–µ—Ç–∫–∏"));
        row.add(new KeyboardButton("‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è"));
        List<KeyboardRow> keyboard = new ArrayList<>();
        keyboard.add(row);
        return buildKeyboard(keyboard);
    }

    public ReplyKeyboardMarkup getNoteMenuKeyboard() {
        List<KeyboardRow> keyboard = new ArrayList<>();
        keyboard.add(createRow("‚ûï –ù–æ–≤–∞—è –∑–∞–º–µ—Ç–∫–∞", "üìã –°–ø–∏—Å–æ–∫ –∑–∞–º–µ—Ç–æ–∫"));
        keyboard.add(createRow("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–º–µ—Ç–∫—É", "‚ùå –£–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É"));
        keyboard.add(createRow("üîô –ù–∞–∑–∞–¥"));
        return buildKeyboard(keyboard);
    }

    public ReplyKeyboardMarkup getReminderMenuKeyboard() {
        List<KeyboardRow> keyboard = new ArrayList<>();
        keyboard.add(createRow("‚ûï –ù–æ–≤–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ", "üìã –°–ø–∏—Å–æ–∫ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π"));
        keyboard.add(createRow("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ", "‚ùå –£–¥–∞–ª–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ"));
        keyboard.add(createRow("üîô –ù–∞–∑–∞–¥"));
        return buildKeyboard(keyboard);
    }

    private KeyboardRow createRow(String... labels) {
        KeyboardRow row = new KeyboardRow();
        for (String label : labels) {
            row.add(new KeyboardButton(label));
        }
        return row;
    }

    private ReplyKeyboardMarkup buildKeyboard(List<KeyboardRow> rows) {
        ReplyKeyboardMarkup keyboardMarkup = new ReplyKeyboardMarkup();
        keyboardMarkup.setKeyboard(rows);
        keyboardMarkup.setResizeKeyboard(true);
        keyboardMarkup.setOneTimeKeyboard(false);
        return keyboardMarkup;
    }
}
